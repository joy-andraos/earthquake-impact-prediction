ggcorrplot(correlation_matrix,
method = "circle",
type = "lower",
lab = TRUE,
lab_size = 1,
tl.cex = 8,
tl.srt = 45,
colors = c("blue", "white", "red"),
title = "Correlation Matrix with Categorical and Numeric Data",
ggtheme = theme_minimal())
# Step 1: One-hot encode qualitative (categorical) variables using model.matrix
encoded_df <- model.matrix(~ 0 + continent, data = df)
# Step 2: Combine the one-hot encoded columns with numeric data
numeric_df <- df %>% select(where(is.numeric))
combined_df <- cbind(numeric_df, encoded_df)
# Step 3: Compute the correlation matrix
correlation_matrix <- cor(combined_df, use = "complete.obs")
# Step 4: Print the correlation matrix
print(correlation_matrix)
# Step 5: Visualize the correlation matrix
ggcorrplot(correlation_matrix,
method = "circle",
type = "lower",
lab = TRUE,
lab_size = 2,
tl.cex = 8,
tl.srt = 45,
colors = c("blue", "white", "red"),
title = "Correlation Matrix with Categorical and Numeric Data",
ggtheme = theme_minimal())
# Step 1: One-hot encode qualitative (categorical) variables using model.matrix
encoded_df <- model.matrix(~ 0 + continent, data = df)
# Step 2: Combine the one-hot encoded columns with numeric data
numeric_df <- df %>% select(where(is.numeric))
combined_df <- cbind(numeric_df, encoded_df)
# Step 3: Compute the correlation matrix
correlation_matrix <- cor(combined_df, use = "complete.obs")
# Step 4: Print the correlation matrix
print(correlation_matrix)
# Step 5: Visualize the correlation matrix
ggcorrplot(correlation_matrix,
method = "circle",
type = "lower",
lab = TRUE,
lab_size = 1.5,
tl.cex = 8,
tl.srt = 45,
colors = c("blue", "white", "red"),
title = "Correlation Matrix with Categorical and Numeric Data",
ggtheme = theme_minimal())
ggplot(data = df) +
geom_point(mapping = aes(x = magnitude, y = depth, color = sig), alpha = 0.6) +
geom_smooth(mapping = aes(x = magnitude, y = depth), method = "lm", se = TRUE) +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Magnitude vs. Depth of Earthquakes",
x = "Magnitude",
y = "Depth (km)",
color = "Seismic Significance")
plot_ly(df, x = ~longitude, y = ~latitude, z = ~depth,
color = ~magnitude, colors = c('blue', 'red'), type = 'scatter3d', mode = 'markers') %>%
layout(title = "3D Scatter Plot of Earthquakes")
plot_ly(df, x = ~longitude, y = ~latitude, z = ~depth,
color = ~magnitude, colors = c('blue', 'red'), type = 'scatter3d', mode = 'markers') %>%
layout(title = "3D Scatter Plot of Earthquakes")
lm_inter <- lm(depth ~ magnitude * latitude + magnitude + latitude, data = earthquake_clean)
lm_inter <- lm(depth ~ magnitude * latitude + magnitude + latitude, data = df)
summary(lm_inter)
lm_inter <- lm(magnitude ~ depth * latitude + depth + latitude, data = df)
summary(lm_inter)
# Scatter plot for SIG vs. Magnitude
ggplot(df, aes(x = sig, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of SIG vs. Magnitude",
x = "SIG",
y = "Magnitude") +
theme_minimal()
# Scatter plot for SIG vs. Magnitude
ggplot(df, aes(x = sig, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of SIG vs. Magnitude",
x = "SIG",
y = "Magnitude") +
# Scatter plot for SIG vs. Magnitude
ggplot(df, aes(x = sig, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of SIG vs. Magnitude",
x = "SIG",
y = "Magnitude") +
theme_minimal()
# LR with mag vs sig
lm.fit <- lm(magnitude ~ sig, data = df)
summary(lm.fit)
lm_multi <- lm(sig ~ magnitude + cdi + mmi, data = df)
summary(lm_multi)
lm.fit <- lm(magnitude ~ location, data = df_clean)
lm.fit <- lm(magnitude ~ location, data = df)
summary(lm.fit)
# Scatter plot for CDI vs. Magnitude
ggplot(df_clean, aes(x = cdi, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +  # Adds a linear regression line
labs(title = "Scatter Plot of CDI vs. Magnitude",
x = "CDI",
y = "Magnitude") +
theme_minimal()
# Scatter plot for CDI vs. Magnitude
ggplot(df, aes(x = cdi, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +  # Adds a linear regression line
labs(title = "Scatter Plot of CDI vs. Magnitude",
x = "CDI",
y = "Magnitude") +
theme_minimal()
# Scatter plot for MMI vs. Magnitude
ggplot(df, aes(x = mmi, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of MMI vs. Magnitude",
x = "MMI",
y = "Magnitude") +
theme_minimal()
# Scatter plot for SIG vs. Magnitude
ggplot(df, aes(x = sig, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of SIG vs. Magnitude",
x = "SIG",
y = "Magnitude") +
theme_minimal()
# LR with mag vs sig
lm.fit <- lm(magnitude ~ sig, data = df)
summary(lm.fit)
df <- read.csv("earthquake.csv", header = TRUE)
View(df)
head(df)
summary(df)
cat("Original Dataset Dimensions: ", dim(df), "\n")
cat("Missing Values per Column:\n")
print(colSums(is.na(df)))
lm_inter <- lm(magnitude ~ depth * latitude + depth + latitude, data = df)
summary(lm_inter)
# Scatter plot for CDI vs. Magnitude
ggplot(df, aes(x = cdi, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +  # Adds a linear regression line
labs(title = "Scatter Plot of CDI vs. Magnitude",
x = "CDI",
y = "Magnitude") +
theme_minimal()
# Scatter plot for MMI vs. Magnitude
ggplot(df, aes(x = mmi, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of MMI vs. Magnitude",
x = "MMI",
y = "Magnitude") +
theme_minimal()
# Scatter plot for SIG vs. Magnitude
ggplot(df, aes(x = sig, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of SIG vs. Magnitude",
x = "SIG",
y = "Magnitude") +
theme_minimal()
# LR with mag vs sig
lm.fit <- lm(magnitude ~ sig, data = df)
summary(lm.fit)
lm_multi <- lm(sig ~ magnitude + cdi + mmi, data = df)
summary(lm_multi)
lm.fit <- lm(magnitude ~ location, data = df)
summary(lm.fit)
# LR with mag vs sig
lm.fit <- lm(magnitude ~ sig, data = df)
summary(lm.fit)
lm.fit <- lm(sig ~ location, data = df)
summary(lm.fit)
lm_multi <- lm(sig ~ magnitude + cdi + mmi, data = df)
summary(lm_multi)
lm_multi <- lm(sig ~ magnitude + cdi + mmi + location, data = df)
summary(lm_multi)
lm_poly <- lm(depth ~ poly(magnitude, 2), data = df)
summary(lm_poly)
lm_poly <- lm(depth ~ poly(magnitude, 3), data = df)
summary(lm_poly)
lm_poly <- lm(depth ~ poly(magnitude, 7), data = df)
summary(lm_poly)
lm_poly <- lm(depth ~ poly(magnitude, 5), data = df)
summary(lm_poly)
lm_inter <- lm(sig ~ magnitude * location + magnitude + location, data = df)
summary(lm_inter)
lm_inter <- lm(sig ~ magnitude * location + magnitude + location, data = df)
summary(lm_inter)
library(tinytex)
# Load libraries
library(tidyverse)
library(ggplot2)
library(plotly)
library(ggcorrplot)
library(dplyr)
install.packages(tinytex)
library(tinytex)
# Box plot for SIG vs. Location
ggplot(df, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal()
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.1)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal()
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.02)
ggplot(df, aes(x = as.factor(Location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.02)
ggplot(df, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.002)
ggplot(df, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.12)
ggplot(df, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.000001)
ggplot(df, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.1)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.01)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.05)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org"))
# Load libraries
library(tidyverse)
library(ggplot2)
library(plotly)
library(ggcorrplot)
library(dplyr)
library(tinytex)
library(knitr)
library(rmarkdown)
df <- read.csv("earthquake.csv", header = TRUE)
View(df)
head(df)
summary(df)
cat("Original Dataset Dimensions: ", dim(df), "\n")
cat("Missing Values per Column:\n")
print(colSums(is.na(df)))
# Step 1: Select only the numeric columns
numeric_df <- df %>% select(where(is.numeric))
# Step 2: Compute the correlation matrix
correlation_matrix <- cor(numeric_df, use = "complete.obs")
# Step 3: Print the correlation matrix
print(correlation_matrix)
# Step 4: Visualize the correlation matrix
ggcorrplot(correlation_matrix,
method = "circle",
type = "lower",
lab = TRUE,
lab_size = 3,
colors = c("blue", "white", "red"),
title = "Correlation Matrix of Factors Influencing Magnitude",
ggtheme = theme_minimal())
# Step 1: One-hot encode qualitative (categorical) variables using model.matrix
encoded_df <- model.matrix(~ 0 + continent, data = df)
# Step 2: Combine the one-hot encoded columns with numeric data
numeric_df <- df %>% select(where(is.numeric))
combined_df <- cbind(numeric_df, encoded_df)
# Step 3: Compute the correlation matrix
correlation_matrix <- cor(combined_df, use = "complete.obs")
# Step 4: Print the correlation matrix
print(correlation_matrix)
# Step 5: Visualize the correlation matrix
ggcorrplot(correlation_matrix,
method = "circle",
type = "lower",
lab = TRUE,
lab_size = 1.5,
tl.cex = 8,
tl.srt = 45,
colors = c("blue", "white", "red"),
title = "Correlation Matrix with Categorical and Numeric Data",
ggtheme = theme_minimal())
ggplot(data = df) +
geom_point(mapping = aes(x = magnitude, y = depth, color = sig), alpha = 0.6) +
geom_smooth(mapping = aes(x = magnitude, y = depth), method = "lm", se = TRUE) +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Magnitude vs. Depth of Earthquakes",
x = "Magnitude",
y = "Depth (km)",
color = "Seismic Significance")
install.packages("plot3D")
# Load the plot3D library
library(plot3D)
# Static 3D scatter plot using plot3D
scatter3D(x = df$longitude, y = df$latitude, z = df$depth,
colvar = df$magnitude,
col = ramp.col(c("blue", "red")),
pch = 19, cex = 1.5,
xlab = "Longitude", ylab = "Latitude", zlab = "Depth",
main = "3D Scatter Plot of Earthquakes")
# To visualize it in R (since PDFs don't support 3D plots): run this cell:
#plot_ly(df, x = ~longitude, y = ~latitude, z = ~depth,
#        color = ~magnitude, colors = c('blue', 'red'), type = 'scatter3d', mode = 'markers') %>%
#  layout(title = "3D Scatter Plot of Earthquakes")
# Scatter plot for CDI vs. Magnitude
ggplot(df, aes(x = cdi, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +  # Adds a linear regression line
labs(title = "Scatter Plot of CDI vs. Magnitude",
x = "CDI",
y = "Magnitude") +
theme_minimal()
# Scatter plot for MMI vs. Magnitude
ggplot(df, aes(x = mmi, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of MMI vs. Magnitude",
x = "MMI",
y = "Magnitude") +
theme_minimal()
# Scatter plot for SIG vs. Magnitude
ggplot(df, aes(x = sig, y = magnitude)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Scatter Plot of SIG vs. Magnitude",
x = "SIG",
y = "Magnitude") +
theme_minimal()
# LR with mag vs sig
lm.fit <- lm(magnitude ~ sig, data = df)
summary(lm.fit)
lm_poly <- lm(depth ~ poly(magnitude, 5), data = df)
summary(lm_poly)
lm_multi <- lm(sig ~ magnitude + cdi + mmi, data = df)
summary(lm_multi)
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.05)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lm.fit <- lm(sig ~ location, data = df)
summary(lm.fit)
lm_multi <- lm(sig ~ magnitude + cdi + mmi + location, data = df)
summary(lm_multi)
lm_inter <- lm(sig ~ magnitude * location + magnitude + location, data = df)
summary(lm_inter)
lm_inter <- lm(sig ~ magnitude * location + magnitude + location, data = df)
summary(lm_inter)
View(numeric_df)
df <- read.csv("earthquake.csv", header = TRUE)
View(df)
head(df)
summary(df)
cat("Original Dataset Dimensions: ", dim(df), "\n")
df[df == ""] <- NA
df[df == " "] <- NA
df[df == "NA"] <- NA
cat("Missing Values per Column:\n")
print(colSums(is.na(df)))
df <- read.csv("earthquake.csv", header = TRUE)
View(df)
head(df)
summary(df)
cat("Original Dataset Dimensions: ", dim(df), "\n")
df[df == ""] <- NA
df[df == " "] <- NA
df[df == "NA"] <- NA
cat("Missing Values per Column:\n")
print(colSums(is.na(df)))
head(df)
# LR with mag vs sig
lm.fit <- lm(magnitude ~ sig, data = df)
summary(lm.fit)
# LR with mag vs sig
lm.fit <- lm(sig ~ magnitude, data = df)
summary(lm.fit)
lm_poly <- lm(depth ~ poly(magnitude, 5), data = df)
summary(lm_poly)
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.05)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.04)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.03)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.02)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.01)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.06)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Box plot for SIG vs. Location on a sample of the dataset
df_sample <- df %>% sample_frac(0.035)
ggplot(df_sample, aes(x = as.factor(location), y = sig)) +
geom_boxplot() +
labs(title = "Boxplot of SIG vs. Location",
x = "Location",
y = "Sig") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
tinytex::install_tinytex()
